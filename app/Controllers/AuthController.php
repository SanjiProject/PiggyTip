<?php
namespace App\Controllers; use App\Lib\Helpers; use App\Lib\Validator; use App\Models\User;

class AuthController{
  public static function loginForm(): string { ob_start(); require APP_BASE_PATH.'/app/Views/auth/login.php'; $content=ob_get_clean(); $pageTitle='Login'; ob_start(); require APP_BASE_PATH.'/app/Views/layouts/main.php'; return ob_get_clean(); }
  public static function registerForm(): string { $a=random_int(1,9); $b=random_int(1,9); $_SESSION['captcha_register'] = $a + $b; $registerCaptchaQ = "What is $a + $b?"; ob_start(); require APP_BASE_PATH . '/app/Views/auth/register.php'; $content=ob_get_clean(); $pageTitle='Register'; ob_start(); require APP_BASE_PATH.'/app/Views/layouts/main.php'; return ob_get_clean(); }
  public static function login(): void { $email=trim($_POST['email']??''); $password=$_POST['password']??''; $user=User::findByEmail($email); if(!$user||!password_verify($password,$user['password_hash'])){ $_SESSION['flash_error']='Invalid credentials'; Helpers::redirect('/login'); } session_regenerate_id(true); $_SESSION['user_id']=(int)$user['id']; Helpers::redirect('/dashboard'); }
  public static function register(): void { $username=trim($_POST['username']??''); $email=trim($_POST['email']??''); $password=$_POST['password']??''; $display=trim($_POST['display_name']??''); $captcha=trim((string)($_POST['captcha']??'')); $errors=[]; $expected=$_SESSION['captcha_register']??null; if($expected===null || !ctype_digit($captcha) || (int)$captcha!==(int)$expected){ $errors[]='Captcha incorrect'; } unset($_SESSION['captcha_register']); if(!Validator::nonEmpty($username,3,32)||!preg_match('/^[A-Za-z0-9_]+$/',$username)) $errors[]='Invalid username'; if(!Validator::email($email)) $errors[]='Invalid email'; if(mb_strlen($password)<8) $errors[]='Password must be at least 8 characters'; if(!Validator::nonEmpty($display,1,80)) $errors[]='Display name required'; if(User::findByUsername($username)) $errors[]='Username already taken'; if(User::findByEmail($email)) $errors[]='Email already registered'; if($errors){ $_SESSION['flash_error']=implode('  ',$errors); Helpers::redirect('/register'); } $slug=\App\Lib\Helpers::slugify($username); $hash=password_hash($password,PASSWORD_DEFAULT); $uid=User::create(['username'=>$username,'email'=>$email,'password_hash'=>$hash,'display_name'=>$display,'slug'=>$slug]); session_regenerate_id(true); $_SESSION['user_id']=$uid; Helpers::redirect('/dashboard'); }
  public static function logout(): void { $_SESSION=[]; if(ini_get('session.use_cookies')){ $p=session_get_cookie_params(); setcookie(session_name(),'',time()-42000,$p['path'],$p['domain'],$p['secure'],$p['httponly']); } session_destroy(); Helpers::redirect('/'); }
}
